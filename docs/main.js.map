{"version":3,"sources":["./src/app/quote/quote.component.ts","./src/app/quote/quote.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/highest.directive.ts","./src/app/quote-form/quote-form.component.ts","./src/app/quote-form/quote-form.component.html","./src/app/app-routing.module.ts","./src/app/quote.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Quote } from '../quote';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n\n  quotes:Quote[]=[\n    new Quote('Start writing, no matter what. The water does not flow until the faucet is turned on.', 100, 0,'Louis LAmour', 100),\n    new Quote('Get it down. Take chances. It may be bad, but it is the only way you can do anything really good.', 60, 0,'William Faulkner', 60),\n    new Quote('The first draft is just you telling yourself the story.', 50, 0,'Terry Pratchett', 50),\n    new Quote('You do not start out writing good stuff. You start out writing crap and thinking it is good stuff, and then gradually you get better at it.', 30, 0,'Octavia E. Butler', 30),\n    new Quote('Start before you are ready.', 20, 0,'Steven Pressfield', 20)\n  ];\n  addNewQuote(Quote: any){\n    let QuoteLength = this.quotes.length;\n    Quote.POINTS = QuoteLength+1;\n    this.quotes.push(Quote)\n  }\n  myarr: number[]=this.quotes.map(quote=>quote.POINTS)\n  highest= Math.max(...this.myarr)\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid general-2 text-center\">\n    <div class=\"row myheading\">\n        <h1>QUOTES-APP</h1>\n    </div>\n    <ul class=\"pt-3 p-5\" *ngFor = 'let quote of quotes'>\n        <div appHighest *ngIf = 'quote.POINTS == highest; then rule else leaveit'></div>\n        <ng-template #rule>\n            <li appHighest class=\" mylist d-flex justify-content-center\"> <span class=\" m-3 col\">{{quote.QUOTES}} <span class=\"quoty m-3 col\" >AUTHOR: <br> {{quote.AUTHOR}}</span> </span><button type=\"submit\" class=\"quoty m-3 col\">UPVOTE: {{quote.UPVOTES}}</button> <button type=\"submit\" class=\"quoty m-3 col\">DOWNVOTE: {{quote.DOWNVOTES}}</button> <span class=\"quoty m-3 col \">POINTS: {{quote.POINTS}}</span></li>\n        </ng-template>\n        <ng-template #leaveit>\n            <li class=\" mylist d-flex justify-content-center\"> <span class=\" m-3 col\">{{quote.QUOTES}} </span> <span class=\"quoty m-3 col\" >AUTHOR: <br> {{quote.AUTHOR}}</span><button type=\"submit\" class=\"quoty m-3 col\">UPVOTE: {{quote.UPVOTES}}</button> <button type=\"submit\" class=\"quoty m-3 col\">DOWNVOTE: {{quote.DOWNVOTES}}</button> <span class=\"quoty m-3 col \">POINTS: {{quote.POINTS}}</span></li>\n        </ng-template>\n    </ul>\n    <app-quote-form (addQuote)=\"($event)\"></app-quote-form> \n</div>   \n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n\n","<app-quote></app-quote>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuoteComponent } from './quote/quote.component';\nimport { QuoteFormComponent } from './quote-form/quote-form.component';\nimport { HighestDirective } from './highest.directive';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteComponent,\n    QuoteFormComponent,\n    HighestDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appHighest]'\n})\nexport class HighestDirective {\n\n  constructor(private elem:ElementRef) { \n    elem.nativeElement.style.backgroundColor = 'maroon';\n   }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Quote } from '../quote';\n\n@Component({\n  selector: 'app-quote-form',\n  templateUrl: './quote-form.component.html',\n  styleUrls: ['./quote-form.component.css']\n})\nexport class QuoteFormComponent implements OnInit {\n\n  newQuote = new Quote(\"\",0,0,\"\",0);\n  @Output()addQuote = new EventEmitter<Quote>();\n\n  submitQuote(){\n    this.addQuote.emit(this.newQuote)\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container question\">\n    <hr>\n    <div class=\"row d-flex justify-content-center\">\n        <p>WOULD YOU LIKE TO CREATE A NEW QUOTE?</p>\n    </div>\n    <form (ngSubmit)=\"submitQuote()\" #goalForm=\"ngForm\" class=\"myform\">\n        <div class=\"row form-group details\">\n            <input class=\"form-control\" #name=\"ngModel\" name=\"name\" id=\"myname\" type=\"text\" [(ngModel)]=\"newQuote.AUTHOR\" required placeholder=\"What's your full name?\">Display{{newQuote.QUOTES}}\n            <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n                <p>Name is required</p>\n            </div>\n        </div>    \n        <div class=\"row form-group details mt-3\">\n            <textarea class=\"form-control\" type=\"text\" #quote=\"ngModel\" id=\"myquote\" [(ngModel)]=\"newQuote.QUOTES\" name=\"quote\" required placeholder=\"Type your quote here...\"></textarea>\n            <div [hidden]=\"quote.valid || quote.pristine\" class=\"alert alert-danger\">\n                <p>Quote is required</p>\n            </div>\n        </div>\n        <hr>\n        <div class=\"button-2\">\n            <button type=\"submit\">ADD QUOTE</button>\n            <button type=\"submit\">DELETE QUOTE</button>\n        </div>\n    </form>\n    <footer class=\"row myfooter d-flex justify-content-center\">\n        <p>Made with love by Bambi</p>\n    </footer>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"," export class Quote {\n     QUOTES:string;\n     UPVOTES:number;\n     DOWNVOTES:number;\n     AUTHOR:string;\n     POINTS:number\n     constructor(QUOTES:string,UPVOTES:number,DOWNVOTES:number, AUTHOR:string, POINTS:number){\n         this.QUOTES=QUOTES;\n         this.UPVOTES=UPVOTES;\n         this.DOWNVOTES=DOWNVOTES;\n         this.AUTHOR=AUTHOR;\n         this.POINTS=POINTS;\n     }\n }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}